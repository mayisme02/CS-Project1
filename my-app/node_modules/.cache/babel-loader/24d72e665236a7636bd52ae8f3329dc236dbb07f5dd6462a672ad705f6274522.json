{"ast":null,"code":"var _jsxFileName = \"C:\\\\CS-Project1\\\\my-app\\\\src\\\\components\\\\Login.js\";\nconst firebaseApp = import(\"../firebase/firebase.js\");\nimport { createUserWithEmailAndPassword, getAuth, getRedirectResult, GoogleAuthProvider, signInWithPopup } from \"firebase/auth\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst provider = new GoogleAuthProvider();\n// ใช้ GoogleAuthProvider เพื่อรองรับการลงทะเบียนด้วย Google\n\nconst Login = () => {\n  const handleGoogleLogin = async () => {\n    try {\n      const result = await signInWithPopup(auth, provider);\n      const user = result.user;\n      console.log(\"Google login successful, user:\", user.uid);\n    } catch (error) {\n      console.error(\"Google login error:\", error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleGoogleLogin,\n      children: \"Login with Google\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["firebaseApp","createUserWithEmailAndPassword","getAuth","getRedirectResult","GoogleAuthProvider","signInWithPopup","jsxDEV","_jsxDEV","Fragment","_Fragment","provider","Login","handleGoogleLogin","result","auth","user","console","log","uid","error","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["C:/CS-Project1/my-app/src/components/Login.js"],"sourcesContent":["const firebaseApp = import(\"../firebase/firebase.js\");\r\nimport { createUserWithEmailAndPassword, getAuth, getRedirectResult, GoogleAuthProvider, signInWithPopup } from \"firebase/auth\";\r\n\r\nconst provider = new GoogleAuthProvider();\r\n// ใช้ GoogleAuthProvider เพื่อรองรับการลงทะเบียนด้วย Google\r\n\r\nconst Login = () => {\r\n    const handleGoogleLogin = async () => {\r\n        try {\r\n            const result = await signInWithPopup(auth, provider);\r\n            const user = result.user;\r\n\r\n            console.log(\"Google login successful, user:\", user.uid);\r\n        } catch (error) {\r\n            console.error(\"Google login error:\", error);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <h2>Login</h2>\r\n            <button onClick={handleGoogleLogin}>\r\n                Login with Google\r\n            </button>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Login;"],"mappings":";AAAA,MAAMA,WAAW,GAAG,MAAM,CAAC,yBAAyB,CAAC;AACrD,SAASC,8BAA8B,EAAEC,OAAO,EAAEC,iBAAiB,EAAEC,kBAAkB,EAAEC,eAAe,QAAQ,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAEhI,MAAMC,QAAQ,GAAG,IAAIN,kBAAkB,CAAC,CAAC;AACzC;;AAEA,MAAMO,KAAK,GAAGA,CAAA,KAAM;EAChB,MAAMC,iBAAiB,GAAG,MAAAA,CAAA,KAAY;IAClC,IAAI;MACA,MAAMC,MAAM,GAAG,MAAMR,eAAe,CAACS,IAAI,EAAEJ,QAAQ,CAAC;MACpD,MAAMK,IAAI,GAAGF,MAAM,CAACE,IAAI;MAExBC,OAAO,CAACC,GAAG,CAAC,gCAAgC,EAAEF,IAAI,CAACG,GAAG,CAAC;IAC3D,CAAC,CAAC,OAAOC,KAAK,EAAE;MACZH,OAAO,CAACG,KAAK,CAAC,qBAAqB,EAAEA,KAAK,CAAC;IAC/C;EACJ,CAAC;EAED,oBACIZ,OAAA,CAAAE,SAAA;IAAAW,QAAA,gBACIb,OAAA;MAAAa,QAAA,EAAI;IAAK;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACdjB,OAAA;MAAQkB,OAAO,EAAEb,iBAAkB;MAAAQ,QAAA,EAAC;IAEpC;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA,eACX,CAAC;AAEX,CAAC;AAAAE,EAAA,GApBKf,KAAK;AAsBX,eAAeA,KAAK;AAAC,IAAAe,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}